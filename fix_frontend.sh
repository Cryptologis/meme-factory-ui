#!/bin/bash

# Find and replace the bonding curve calculation
perl -i -pe 'BEGIN{undef $/;} s/\/\/ LINEAR bonding curve.*?console\.log\('"'"'Percentage of supply:'"'"'.*?\);/\/\/ Calculate cost using pump.fun bonding curve (MATCHES ON-CHAIN!)\n      const VIRTUAL_SOL_RESERVES = 30_000_000_000;\n      const VIRTUAL_TOKEN_RESERVES = 1_000_000_000;\n      const k = VIRTUAL_SOL_RESERVES * VIRTUAL_TOKEN_RESERVES;\n      const currentTokenReserve = VIRTUAL_TOKEN_RESERVES;\n      const newTokenReserve = currentTokenReserve - finalBuyAmount;\n      const newSolReserve = k \/ newTokenReserve;\n      const currentSolReserve = k \/ currentTokenReserve;\n      const estimatedCost = Math.floor(newSolReserve - currentSolReserve);\n      const maxSolCost = Math.floor(estimatedCost * 2);\n\n      console.log('"'"'Initial supply:'"'"', initialSupply);\n      console.log('"'"'Buy percentage:'"'"', safeBuyPercentage);\n      console.log('"'"'Buy amount:'"'"', finalBuyAmount);\n      console.log('"'"'Estimated cost (lamports):'"'"', estimatedCost);\n      console.log('"'"'Estimated cost (SOL):'"'"', estimatedCost \/ 1_000_000_000);\n      console.log('"'"'Max SOL cost:'"'"', maxSolCost \/ 1_000_000_000, '"'"'SOL'"'"');\n      console.log('"'"'Percentage of supply:'"'"', ((finalBuyAmount \/ initialSupply) * 100).toFixed(4) + '"'"'%'"'"');/smg' client/src/components/CreateTokenForm.tsx

echo "âœ… Updated frontend bonding curve calculation!"
